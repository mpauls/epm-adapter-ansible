# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: client.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='client.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0c\x63lient.proto\"\x1b\n\x0b\x46ileMessage\x12\x0c\n\x04\x66ile\x18\x01 \x01(\x0c\")\n\x12ResourceIdentifier\x12\x13\n\x0bresource_id\x18\x01 \x01(\t\"K\n\x14\x44ockerRuntimeMessage\x12\x13\n\x0bresource_id\x18\x01 \x01(\t\x12\x10\n\x08property\x18\x02 \x03(\t\x12\x0c\n\x04\x66ile\x18\x03 \x01(\x0c\"\"\n\x0eStringResponse\x12\x10\n\x08response\x18\x01 \x01(\t\"(\n\x10StartStopMessage\x12\x14\n\x0c\x63ontainer_id\x18\x01 \x01(\t\"\x07\n\x05\x45mpty\"M\n\x04\x41uth\x12\x10\n\x08\x61uth_url\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\t\x12\x0f\n\x07project\x18\x04 \x01(\t\"\xbd\x04\n\x14ResourceGroupCompose\x12\x0c\n\x04name\x18\x01 \x01(\t\x12.\n\x04pops\x18\x02 \x03(\x0b\x32 .ResourceGroupCompose.PoPCompose\x12\x36\n\x08networks\x18\x03 \x03(\x0b\x32$.ResourceGroupCompose.NetworkCompose\x12.\n\x04vdus\x18\x04 \x03(\x0b\x32 .ResourceGroupCompose.VDUCompose\x12\x13\n\x04\x61uth\x18\x05 \x01(\x0b\x32\x05.Auth\x1a\x35\n\nPoPCompose\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x19\n\x11interfaceEndpoint\x18\x02 \x01(\t\x1a\x32\n\x14MetadataEntryCompose\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x1aP\n\x0eNetworkCompose\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07poPName\x18\x02 \x01(\t\x12\x0c\n\x04\x63idr\x18\x03 \x01(\t\x12\x11\n\tnetworkId\x18\x04 \x01(\t\x1a\xac\x01\n\nVDUCompose\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\timageName\x18\x02 \x01(\t\x12\x0f\n\x07netName\x18\x03 \x01(\t\x12\x0f\n\x07poPName\x18\x04 \x01(\t\x12\x11\n\tcomputeId\x18\x05 \x01(\t\x12\n\n\x02ip\x18\x06 \x01(\t\x12<\n\x08metadata\x18\x07 \x03(\x0b\x32*.ResourceGroupCompose.MetadataEntryCompose2\xfc\x03\n\x0e\x43omposeHandler\x12\x32\n\tUpCompose\x12\x0c.FileMessage\x1a\x15.ResourceGroupCompose\"\x00\x12.\n\rRemoveCompose\x12\x13.ResourceIdentifier\x1a\x06.Empty\"\x00\x12.\n\rStopContainer\x12\x13.ResourceIdentifier\x1a\x06.Empty\"\x00\x12@\n\x16\x43heckIfContainerExists\x12\x13.ResourceIdentifier\x1a\x0f.StringResponse\"\x00\x12\x41\n\x17\x43heckIfContainerRunning\x12\x13.ResourceIdentifier\x1a\x0f.StringResponse\"\x00\x12/\n\x0eStartContainer\x12\x13.ResourceIdentifier\x1a\x06.Empty\"\x00\x12:\n\x0e\x45xecuteCommand\x12\x15.DockerRuntimeMessage\x1a\x0f.StringResponse\"\x00\x12\x35\n\x0c\x44ownloadFile\x12\x15.DockerRuntimeMessage\x1a\x0c.FileMessage\"\x00\x12-\n\nUploadFile\x12\x15.DockerRuntimeMessage\x1a\x06.Empty\"\x00\x42\x02P\x01\x62\x06proto3')
)




_FILEMESSAGE = _descriptor.Descriptor(
  name='FileMessage',
  full_name='FileMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file', full_name='FileMessage.file', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=43,
)


_RESOURCEIDENTIFIER = _descriptor.Descriptor(
  name='ResourceIdentifier',
  full_name='ResourceIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='ResourceIdentifier.resource_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=45,
  serialized_end=86,
)


_DOCKERRUNTIMEMESSAGE = _descriptor.Descriptor(
  name='DockerRuntimeMessage',
  full_name='DockerRuntimeMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource_id', full_name='DockerRuntimeMessage.resource_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='property', full_name='DockerRuntimeMessage.property', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file', full_name='DockerRuntimeMessage.file', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=163,
)


_STRINGRESPONSE = _descriptor.Descriptor(
  name='StringResponse',
  full_name='StringResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='response', full_name='StringResponse.response', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=165,
  serialized_end=199,
)


_STARTSTOPMESSAGE = _descriptor.Descriptor(
  name='StartStopMessage',
  full_name='StartStopMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='container_id', full_name='StartStopMessage.container_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=201,
  serialized_end=241,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=243,
  serialized_end=250,
)


_AUTH = _descriptor.Descriptor(
  name='Auth',
  full_name='Auth',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='auth_url', full_name='Auth.auth_url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='username', full_name='Auth.username', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='Auth.password', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='project', full_name='Auth.project', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=252,
  serialized_end=329,
)


_RESOURCEGROUPCOMPOSE_POPCOMPOSE = _descriptor.Descriptor(
  name='PoPCompose',
  full_name='ResourceGroupCompose.PoPCompose',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ResourceGroupCompose.PoPCompose.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interfaceEndpoint', full_name='ResourceGroupCompose.PoPCompose.interfaceEndpoint', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=543,
  serialized_end=596,
)

_RESOURCEGROUPCOMPOSE_METADATAENTRYCOMPOSE = _descriptor.Descriptor(
  name='MetadataEntryCompose',
  full_name='ResourceGroupCompose.MetadataEntryCompose',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ResourceGroupCompose.MetadataEntryCompose.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ResourceGroupCompose.MetadataEntryCompose.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=598,
  serialized_end=648,
)

_RESOURCEGROUPCOMPOSE_NETWORKCOMPOSE = _descriptor.Descriptor(
  name='NetworkCompose',
  full_name='ResourceGroupCompose.NetworkCompose',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ResourceGroupCompose.NetworkCompose.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='poPName', full_name='ResourceGroupCompose.NetworkCompose.poPName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cidr', full_name='ResourceGroupCompose.NetworkCompose.cidr', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networkId', full_name='ResourceGroupCompose.NetworkCompose.networkId', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=650,
  serialized_end=730,
)

_RESOURCEGROUPCOMPOSE_VDUCOMPOSE = _descriptor.Descriptor(
  name='VDUCompose',
  full_name='ResourceGroupCompose.VDUCompose',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ResourceGroupCompose.VDUCompose.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='imageName', full_name='ResourceGroupCompose.VDUCompose.imageName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='netName', full_name='ResourceGroupCompose.VDUCompose.netName', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='poPName', full_name='ResourceGroupCompose.VDUCompose.poPName', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='computeId', full_name='ResourceGroupCompose.VDUCompose.computeId', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='ResourceGroupCompose.VDUCompose.ip', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='ResourceGroupCompose.VDUCompose.metadata', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=733,
  serialized_end=905,
)

_RESOURCEGROUPCOMPOSE = _descriptor.Descriptor(
  name='ResourceGroupCompose',
  full_name='ResourceGroupCompose',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ResourceGroupCompose.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pops', full_name='ResourceGroupCompose.pops', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='networks', full_name='ResourceGroupCompose.networks', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vdus', full_name='ResourceGroupCompose.vdus', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='auth', full_name='ResourceGroupCompose.auth', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_RESOURCEGROUPCOMPOSE_POPCOMPOSE, _RESOURCEGROUPCOMPOSE_METADATAENTRYCOMPOSE, _RESOURCEGROUPCOMPOSE_NETWORKCOMPOSE, _RESOURCEGROUPCOMPOSE_VDUCOMPOSE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=332,
  serialized_end=905,
)

_RESOURCEGROUPCOMPOSE_POPCOMPOSE.containing_type = _RESOURCEGROUPCOMPOSE
_RESOURCEGROUPCOMPOSE_METADATAENTRYCOMPOSE.containing_type = _RESOURCEGROUPCOMPOSE
_RESOURCEGROUPCOMPOSE_NETWORKCOMPOSE.containing_type = _RESOURCEGROUPCOMPOSE
_RESOURCEGROUPCOMPOSE_VDUCOMPOSE.fields_by_name['metadata'].message_type = _RESOURCEGROUPCOMPOSE_METADATAENTRYCOMPOSE
_RESOURCEGROUPCOMPOSE_VDUCOMPOSE.containing_type = _RESOURCEGROUPCOMPOSE
_RESOURCEGROUPCOMPOSE.fields_by_name['pops'].message_type = _RESOURCEGROUPCOMPOSE_POPCOMPOSE
_RESOURCEGROUPCOMPOSE.fields_by_name['networks'].message_type = _RESOURCEGROUPCOMPOSE_NETWORKCOMPOSE
_RESOURCEGROUPCOMPOSE.fields_by_name['vdus'].message_type = _RESOURCEGROUPCOMPOSE_VDUCOMPOSE
_RESOURCEGROUPCOMPOSE.fields_by_name['auth'].message_type = _AUTH
DESCRIPTOR.message_types_by_name['FileMessage'] = _FILEMESSAGE
DESCRIPTOR.message_types_by_name['ResourceIdentifier'] = _RESOURCEIDENTIFIER
DESCRIPTOR.message_types_by_name['DockerRuntimeMessage'] = _DOCKERRUNTIMEMESSAGE
DESCRIPTOR.message_types_by_name['StringResponse'] = _STRINGRESPONSE
DESCRIPTOR.message_types_by_name['StartStopMessage'] = _STARTSTOPMESSAGE
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['Auth'] = _AUTH
DESCRIPTOR.message_types_by_name['ResourceGroupCompose'] = _RESOURCEGROUPCOMPOSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FileMessage = _reflection.GeneratedProtocolMessageType('FileMessage', (_message.Message,), dict(
  DESCRIPTOR = _FILEMESSAGE,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:FileMessage)
  ))
_sym_db.RegisterMessage(FileMessage)

ResourceIdentifier = _reflection.GeneratedProtocolMessageType('ResourceIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _RESOURCEIDENTIFIER,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:ResourceIdentifier)
  ))
_sym_db.RegisterMessage(ResourceIdentifier)

DockerRuntimeMessage = _reflection.GeneratedProtocolMessageType('DockerRuntimeMessage', (_message.Message,), dict(
  DESCRIPTOR = _DOCKERRUNTIMEMESSAGE,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:DockerRuntimeMessage)
  ))
_sym_db.RegisterMessage(DockerRuntimeMessage)

StringResponse = _reflection.GeneratedProtocolMessageType('StringResponse', (_message.Message,), dict(
  DESCRIPTOR = _STRINGRESPONSE,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:StringResponse)
  ))
_sym_db.RegisterMessage(StringResponse)

StartStopMessage = _reflection.GeneratedProtocolMessageType('StartStopMessage', (_message.Message,), dict(
  DESCRIPTOR = _STARTSTOPMESSAGE,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:StartStopMessage)
  ))
_sym_db.RegisterMessage(StartStopMessage)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:Empty)
  ))
_sym_db.RegisterMessage(Empty)

Auth = _reflection.GeneratedProtocolMessageType('Auth', (_message.Message,), dict(
  DESCRIPTOR = _AUTH,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:Auth)
  ))
_sym_db.RegisterMessage(Auth)

ResourceGroupCompose = _reflection.GeneratedProtocolMessageType('ResourceGroupCompose', (_message.Message,), dict(

  PoPCompose = _reflection.GeneratedProtocolMessageType('PoPCompose', (_message.Message,), dict(
    DESCRIPTOR = _RESOURCEGROUPCOMPOSE_POPCOMPOSE,
    __module__ = 'client_pb2'
    # @@protoc_insertion_point(class_scope:ResourceGroupCompose.PoPCompose)
    ))
  ,

  MetadataEntryCompose = _reflection.GeneratedProtocolMessageType('MetadataEntryCompose', (_message.Message,), dict(
    DESCRIPTOR = _RESOURCEGROUPCOMPOSE_METADATAENTRYCOMPOSE,
    __module__ = 'client_pb2'
    # @@protoc_insertion_point(class_scope:ResourceGroupCompose.MetadataEntryCompose)
    ))
  ,

  NetworkCompose = _reflection.GeneratedProtocolMessageType('NetworkCompose', (_message.Message,), dict(
    DESCRIPTOR = _RESOURCEGROUPCOMPOSE_NETWORKCOMPOSE,
    __module__ = 'client_pb2'
    # @@protoc_insertion_point(class_scope:ResourceGroupCompose.NetworkCompose)
    ))
  ,

  VDUCompose = _reflection.GeneratedProtocolMessageType('VDUCompose', (_message.Message,), dict(
    DESCRIPTOR = _RESOURCEGROUPCOMPOSE_VDUCOMPOSE,
    __module__ = 'client_pb2'
    # @@protoc_insertion_point(class_scope:ResourceGroupCompose.VDUCompose)
    ))
  ,
  DESCRIPTOR = _RESOURCEGROUPCOMPOSE,
  __module__ = 'client_pb2'
  # @@protoc_insertion_point(class_scope:ResourceGroupCompose)
  ))
_sym_db.RegisterMessage(ResourceGroupCompose)
_sym_db.RegisterMessage(ResourceGroupCompose.PoPCompose)
_sym_db.RegisterMessage(ResourceGroupCompose.MetadataEntryCompose)
_sym_db.RegisterMessage(ResourceGroupCompose.NetworkCompose)
_sym_db.RegisterMessage(ResourceGroupCompose.VDUCompose)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('P\001'))

_COMPOSEHANDLER = _descriptor.ServiceDescriptor(
  name='ComposeHandler',
  full_name='ComposeHandler',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=908,
  serialized_end=1416,
  methods=[
  _descriptor.MethodDescriptor(
    name='UpCompose',
    full_name='ComposeHandler.UpCompose',
    index=0,
    containing_service=None,
    input_type=_FILEMESSAGE,
    output_type=_RESOURCEGROUPCOMPOSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RemoveCompose',
    full_name='ComposeHandler.RemoveCompose',
    index=1,
    containing_service=None,
    input_type=_RESOURCEIDENTIFIER,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StopContainer',
    full_name='ComposeHandler.StopContainer',
    index=2,
    containing_service=None,
    input_type=_RESOURCEIDENTIFIER,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CheckIfContainerExists',
    full_name='ComposeHandler.CheckIfContainerExists',
    index=3,
    containing_service=None,
    input_type=_RESOURCEIDENTIFIER,
    output_type=_STRINGRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CheckIfContainerRunning',
    full_name='ComposeHandler.CheckIfContainerRunning',
    index=4,
    containing_service=None,
    input_type=_RESOURCEIDENTIFIER,
    output_type=_STRINGRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StartContainer',
    full_name='ComposeHandler.StartContainer',
    index=5,
    containing_service=None,
    input_type=_RESOURCEIDENTIFIER,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ExecuteCommand',
    full_name='ComposeHandler.ExecuteCommand',
    index=6,
    containing_service=None,
    input_type=_DOCKERRUNTIMEMESSAGE,
    output_type=_STRINGRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DownloadFile',
    full_name='ComposeHandler.DownloadFile',
    index=7,
    containing_service=None,
    input_type=_DOCKERRUNTIMEMESSAGE,
    output_type=_FILEMESSAGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UploadFile',
    full_name='ComposeHandler.UploadFile',
    index=8,
    containing_service=None,
    input_type=_DOCKERRUNTIMEMESSAGE,
    output_type=_EMPTY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMPOSEHANDLER)

DESCRIPTOR.services_by_name['ComposeHandler'] = _COMPOSEHANDLER

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ComposeHandlerStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.UpCompose = channel.unary_unary(
          '/ComposeHandler/UpCompose',
          request_serializer=FileMessage.SerializeToString,
          response_deserializer=ResourceGroupCompose.FromString,
          )
      self.RemoveCompose = channel.unary_unary(
          '/ComposeHandler/RemoveCompose',
          request_serializer=ResourceIdentifier.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.StopContainer = channel.unary_unary(
          '/ComposeHandler/StopContainer',
          request_serializer=ResourceIdentifier.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.CheckIfContainerExists = channel.unary_unary(
          '/ComposeHandler/CheckIfContainerExists',
          request_serializer=ResourceIdentifier.SerializeToString,
          response_deserializer=StringResponse.FromString,
          )
      self.CheckIfContainerRunning = channel.unary_unary(
          '/ComposeHandler/CheckIfContainerRunning',
          request_serializer=ResourceIdentifier.SerializeToString,
          response_deserializer=StringResponse.FromString,
          )
      self.StartContainer = channel.unary_unary(
          '/ComposeHandler/StartContainer',
          request_serializer=ResourceIdentifier.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.ExecuteCommand = channel.unary_unary(
          '/ComposeHandler/ExecuteCommand',
          request_serializer=DockerRuntimeMessage.SerializeToString,
          response_deserializer=StringResponse.FromString,
          )
      self.DownloadFile = channel.unary_unary(
          '/ComposeHandler/DownloadFile',
          request_serializer=DockerRuntimeMessage.SerializeToString,
          response_deserializer=FileMessage.FromString,
          )
      self.UploadFile = channel.unary_unary(
          '/ComposeHandler/UploadFile',
          request_serializer=DockerRuntimeMessage.SerializeToString,
          response_deserializer=Empty.FromString,
          )


  class ComposeHandlerServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def UpCompose(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RemoveCompose(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def StopContainer(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CheckIfContainerExists(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CheckIfContainerRunning(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def StartContainer(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ExecuteCommand(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DownloadFile(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ComposeHandlerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'UpCompose': grpc.unary_unary_rpc_method_handler(
            servicer.UpCompose,
            request_deserializer=FileMessage.FromString,
            response_serializer=ResourceGroupCompose.SerializeToString,
        ),
        'RemoveCompose': grpc.unary_unary_rpc_method_handler(
            servicer.RemoveCompose,
            request_deserializer=ResourceIdentifier.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'StopContainer': grpc.unary_unary_rpc_method_handler(
            servicer.StopContainer,
            request_deserializer=ResourceIdentifier.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'CheckIfContainerExists': grpc.unary_unary_rpc_method_handler(
            servicer.CheckIfContainerExists,
            request_deserializer=ResourceIdentifier.FromString,
            response_serializer=StringResponse.SerializeToString,
        ),
        'CheckIfContainerRunning': grpc.unary_unary_rpc_method_handler(
            servicer.CheckIfContainerRunning,
            request_deserializer=ResourceIdentifier.FromString,
            response_serializer=StringResponse.SerializeToString,
        ),
        'StartContainer': grpc.unary_unary_rpc_method_handler(
            servicer.StartContainer,
            request_deserializer=ResourceIdentifier.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'ExecuteCommand': grpc.unary_unary_rpc_method_handler(
            servicer.ExecuteCommand,
            request_deserializer=DockerRuntimeMessage.FromString,
            response_serializer=StringResponse.SerializeToString,
        ),
        'DownloadFile': grpc.unary_unary_rpc_method_handler(
            servicer.DownloadFile,
            request_deserializer=DockerRuntimeMessage.FromString,
            response_serializer=FileMessage.SerializeToString,
        ),
        'UploadFile': grpc.unary_unary_rpc_method_handler(
            servicer.UploadFile,
            request_deserializer=DockerRuntimeMessage.FromString,
            response_serializer=Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'ComposeHandler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaComposeHandlerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def UpCompose(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RemoveCompose(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def StopContainer(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CheckIfContainerExists(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CheckIfContainerRunning(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def StartContainer(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ExecuteCommand(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DownloadFile(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UploadFile(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaComposeHandlerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def UpCompose(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UpCompose.future = None
    def RemoveCompose(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RemoveCompose.future = None
    def StopContainer(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    StopContainer.future = None
    def CheckIfContainerExists(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CheckIfContainerExists.future = None
    def CheckIfContainerRunning(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CheckIfContainerRunning.future = None
    def StartContainer(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    StartContainer.future = None
    def ExecuteCommand(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ExecuteCommand.future = None
    def DownloadFile(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DownloadFile.future = None
    def UploadFile(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    UploadFile.future = None


  def beta_create_ComposeHandler_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('ComposeHandler', 'CheckIfContainerExists'): ResourceIdentifier.FromString,
      ('ComposeHandler', 'CheckIfContainerRunning'): ResourceIdentifier.FromString,
      ('ComposeHandler', 'DownloadFile'): DockerRuntimeMessage.FromString,
      ('ComposeHandler', 'ExecuteCommand'): DockerRuntimeMessage.FromString,
      ('ComposeHandler', 'RemoveCompose'): ResourceIdentifier.FromString,
      ('ComposeHandler', 'StartContainer'): ResourceIdentifier.FromString,
      ('ComposeHandler', 'StopContainer'): ResourceIdentifier.FromString,
      ('ComposeHandler', 'UpCompose'): FileMessage.FromString,
      ('ComposeHandler', 'UploadFile'): DockerRuntimeMessage.FromString,
    }
    response_serializers = {
      ('ComposeHandler', 'CheckIfContainerExists'): StringResponse.SerializeToString,
      ('ComposeHandler', 'CheckIfContainerRunning'): StringResponse.SerializeToString,
      ('ComposeHandler', 'DownloadFile'): FileMessage.SerializeToString,
      ('ComposeHandler', 'ExecuteCommand'): StringResponse.SerializeToString,
      ('ComposeHandler', 'RemoveCompose'): Empty.SerializeToString,
      ('ComposeHandler', 'StartContainer'): Empty.SerializeToString,
      ('ComposeHandler', 'StopContainer'): Empty.SerializeToString,
      ('ComposeHandler', 'UpCompose'): ResourceGroupCompose.SerializeToString,
      ('ComposeHandler', 'UploadFile'): Empty.SerializeToString,
    }
    method_implementations = {
      ('ComposeHandler', 'CheckIfContainerExists'): face_utilities.unary_unary_inline(servicer.CheckIfContainerExists),
      ('ComposeHandler', 'CheckIfContainerRunning'): face_utilities.unary_unary_inline(servicer.CheckIfContainerRunning),
      ('ComposeHandler', 'DownloadFile'): face_utilities.unary_unary_inline(servicer.DownloadFile),
      ('ComposeHandler', 'ExecuteCommand'): face_utilities.unary_unary_inline(servicer.ExecuteCommand),
      ('ComposeHandler', 'RemoveCompose'): face_utilities.unary_unary_inline(servicer.RemoveCompose),
      ('ComposeHandler', 'StartContainer'): face_utilities.unary_unary_inline(servicer.StartContainer),
      ('ComposeHandler', 'StopContainer'): face_utilities.unary_unary_inline(servicer.StopContainer),
      ('ComposeHandler', 'UpCompose'): face_utilities.unary_unary_inline(servicer.UpCompose),
      ('ComposeHandler', 'UploadFile'): face_utilities.unary_unary_inline(servicer.UploadFile),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ComposeHandler_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('ComposeHandler', 'CheckIfContainerExists'): ResourceIdentifier.SerializeToString,
      ('ComposeHandler', 'CheckIfContainerRunning'): ResourceIdentifier.SerializeToString,
      ('ComposeHandler', 'DownloadFile'): DockerRuntimeMessage.SerializeToString,
      ('ComposeHandler', 'ExecuteCommand'): DockerRuntimeMessage.SerializeToString,
      ('ComposeHandler', 'RemoveCompose'): ResourceIdentifier.SerializeToString,
      ('ComposeHandler', 'StartContainer'): ResourceIdentifier.SerializeToString,
      ('ComposeHandler', 'StopContainer'): ResourceIdentifier.SerializeToString,
      ('ComposeHandler', 'UpCompose'): FileMessage.SerializeToString,
      ('ComposeHandler', 'UploadFile'): DockerRuntimeMessage.SerializeToString,
    }
    response_deserializers = {
      ('ComposeHandler', 'CheckIfContainerExists'): StringResponse.FromString,
      ('ComposeHandler', 'CheckIfContainerRunning'): StringResponse.FromString,
      ('ComposeHandler', 'DownloadFile'): FileMessage.FromString,
      ('ComposeHandler', 'ExecuteCommand'): StringResponse.FromString,
      ('ComposeHandler', 'RemoveCompose'): Empty.FromString,
      ('ComposeHandler', 'StartContainer'): Empty.FromString,
      ('ComposeHandler', 'StopContainer'): Empty.FromString,
      ('ComposeHandler', 'UpCompose'): ResourceGroupCompose.FromString,
      ('ComposeHandler', 'UploadFile'): Empty.FromString,
    }
    cardinalities = {
      'CheckIfContainerExists': cardinality.Cardinality.UNARY_UNARY,
      'CheckIfContainerRunning': cardinality.Cardinality.UNARY_UNARY,
      'DownloadFile': cardinality.Cardinality.UNARY_UNARY,
      'ExecuteCommand': cardinality.Cardinality.UNARY_UNARY,
      'RemoveCompose': cardinality.Cardinality.UNARY_UNARY,
      'StartContainer': cardinality.Cardinality.UNARY_UNARY,
      'StopContainer': cardinality.Cardinality.UNARY_UNARY,
      'UpCompose': cardinality.Cardinality.UNARY_UNARY,
      'UploadFile': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'ComposeHandler', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
